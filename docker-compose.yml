version: '3.9'
services:

  ui-admin:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve ui-admin
    environment:
      - BASE_URL=/admin
    volumes:
      - ./:/app
    depends_on:
      - svc-stats
      - ui-auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui-admin.rule=PathPrefix(`/admin`)"
      - "traefik.http.routers.ui-admin.entrypoints=web"
      - traefik.http.services.ui-admin.loadbalancer.server.port=3000

  ui-operator:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve ui-operator
    environment:
      - BASE_URL=/operator
    volumes:
      - ./:/app
    depends_on:
      - svc-stats
      - svc-topdelivery
      - svc-b2cpl
      - svc-caller
      - ui-auth
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui-operator.rule=PathPrefix(`/operator`)"
      - "traefik.http.routers.ui-operator.entrypoints=web"
      - traefik.http.services.ui-operator.loadbalancer.server.port=3000

  ui-auth:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve ui-auth
    environment:
      - BASE_URL=/auth
    volumes:
      - ./:/app
    depends_on:
      - svc-users
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui-auth.rule=PathPrefix(`/auth`)"
      - "traefik.http.routers.ui-auth.entrypoints=web"
      - traefik.http.services.ui-auth.loadbalancer.server.port=3000

  svc-stats:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve svc-stats
    volumes:
      - ./:/app
    environment:
      - PG_HOST=postgres
      - MQTT=mqtt://mqtt:1883
    depends_on:
      - traefik
      - postgres
      - mqtt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.svc-stats.rule=PathPrefix(`/api/v1/stats`)"
      - "traefik.http.routers.svc-stats.entrypoints=web"
      - traefik.http.services.svc-stats.loadbalancer.server.port=3000

  svc-users:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve svc-users
    volumes:
      - ./:/app
    environment:
      - PG_HOST=postgres
      - MQTT=mqtt://mqtt:1883
    depends_on:
      - traefik
      - postgres
      - mqtt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.svc-users.rule=PathPrefix(`/api/v1/users`)"
      - "traefik.http.routers.svc-users.entrypoints=web"
      - traefik.http.services.svc-users.loadbalancer.server.port=3000

  svc-b2cpl:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve svc-b2cpl
    volumes:
      - ./:/app
    depends_on:
      - traefik
      - postgres
      - mqtt
      - svc-stats
      - svc-caller
    environment:
      - PG_HOST=postgres
      - MQTT=mqtt://mqtt:1883
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.svc-b2cpl.rule=PathPrefix(`/api/v1/b2cpl`)"
      - "traefik.http.routers.svc-b2cpl.entrypoints=web"
      - traefik.http.services.svc-b2cpl.loadbalancer.server.port=3000

  svc-topdelivery:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve svc-topdelivery
    volumes:
      - ./:/app
    depends_on:
      - traefik
      - postgres
      - mqtt
      - svc-stats
      - svc-caller
    environment:
      - PG_HOST=postgres
      - MQTT=mqtt://mqtt:1883
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.svc-topdelivery.rule=PathPrefix(`/api/v1/top-delivery`)"
      - "traefik.http.routers.svc-topdelivery.entrypoints=web"
      - traefik.http.services.svc-topdelivery.loadbalancer.server.port=3000

  svc-caller:
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npx nx serve svc-caller
    volumes:
      - ./:/app
    environment:
      - PG_HOST=postgres
      - MQTT=mqtt://mqtt:1883
      - REDIS=redis://redis:6379
    depends_on:
      - redis
      - traefik
      - postgres
      - mqtt
      - svc-users
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.svc-caller.rule=PathPrefix(`/api/v1/caller`)"
      - "traefik.http.routers.svc-caller.entrypoints=web"
      - traefik.http.services.svc-caller.loadbalancer.server.port=3000

  traefik:
    image: traefik:v2.9
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - 3000:80
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data

  redis:
    image: redis
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379

  mqtt:
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf

  install:
    user: node
    build:
      dockerfile: ./dockerfiles/Dockerfile.system
    command: npm ci --legacy-peer-deps
    volumes:
      - ~/.npm:/home/node/.npm
      - ~/.cache:/home/node/.cache
      - ./:/app

volumes:
  pg-data:
    name: pg-data-betacall
  redis-data:
    name: redis-data-betacall